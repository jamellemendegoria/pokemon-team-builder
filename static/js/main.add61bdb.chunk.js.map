{"version":3,"sources":["helpers.js","components/TeamMember.js","components/Popover.js","components/TypeChart.js","App.js","reportWebVitals.js","index.js"],"names":["movesWithHyphens","capitalize","str","toUpperCase","slice","capitalizeAll","split","map","word","join","removeHyphens","replace","formatMove","move","formattedMove","includes","replaceAll","formatAllMoves","moves","name","sort","formatAllPokemon","pokemonList","pokemon","formattedPokemon","formatPokemon","removeFormatting","revertedStr","test","words","length","pop","toLowerCase","TeamMember","props","useState","data","charAt","setName","isShowingMoves","setIsShowingMoves","Array","fill","setMoves","index","value","moveInputs","i","push","placeholder","list","onChange","e","tempMoves","target","onMoveChange","handleMoveChange","className","src","sprites","other","front_default","alt","types","type","spellCheck","temp","onTeamChange","id","style","color","indexOf","slot","onClick","filter","Popover","defensiveTemplate","team","member","damageValue","damageValues","offensiveTemplate","teamIndex","damage","hasOwnProperty","moveIndex","isVisible","every","TypeChart","visibilityChart","setVisibilityChart","chart","typeChartDamageValue","type_chart","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","popover","TYPES","App","error","setError","isLoaded","setIsLoaded","pokemonNames","setPokemonNames","moveNames","setMoveNames","typeData","setTypeData","from","checked","setTeam","defensiveObj","offensiveObj","forEach","defensive","offensive","setDamageValues","handleTeamChange","found","find","fetch","then","res","json","result","teamValue","tempTeam","tempDamageValues","tempDamage","typeTracker","decremented","incremented","damage_relations","double_damage_from","damagingType","half_damage_from","no_damage_from","count","calculateDefensiveDamage","Math","abs","damagedType","resetDefensiveDamage","moveName","damage_class","double_damage_to","calculateOffensiveDamage","resetOffensiveDamage","useEffect","a","response","pokemon_entries","prevPokemonNames","pokemon_species","results","prevMoveNames","typeURLs","url","Promise","all","values","valuesResult","fetchPokemonNames","fetchMoveNames","fetchTypeData","loadingTemplate","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.add61bdb.chunk.js","sourcesContent":["const movesWithHyphens = [\n  'baby-doll-eyes','double-edge', 'freeze-dry', 'lock-on', 'mud-slap',\n  'multi-attack', 'power-up-punch', 'self-destruct', 'soft-boiled', 'topsy-turvy',\n  'trick-or-treat', 'u-turn', 'wake-up-slap', 'will-o-wisp', 'x-scissor'\n];\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nfunction capitalizeAll(str) {\n  const words = str.split(/\\s/);\n  const capitalizedWords = words.map(word => capitalize(word));\n  return capitalizedWords.join(' ');\n}\nfunction removeHyphens(str) {\n  return str.replace(/-/g, ' ');\n}\nfunction formatMove(move) {\n  let formattedMove;\n  if (move.includes('-')) {\n    formattedMove = capitalizeAll(removeHyphens(move));\n    // If move name is supposed to include hyphens\n    if (movesWithHyphens.includes(move)) {\n      // These move names only have one hyphen\n      formattedMove = (move === 'baby-doll-eyes' || move === 'power-up-punch' || move === 'wake-up-slap') ?\n      formattedMove.replace(' ', '-') : formattedMove.replaceAll(' ', '-');\n    }\n  } else {\n    formattedMove = capitalize(move);\n  }\n  return formattedMove;\n}\nfunction formatPokemon(pokemon) {\n  let formattedPokemon;\n  if (pokemon.includes('-')) {\n    formattedPokemon = capitalizeAll(removeHyphens(pokemon));\n    // Handles Pokémon names with special requirements\n    if (pokemon === 'mr-mime') {\n      formattedPokemon = formattedPokemon.replace(' ', '. ');\n    }\n  } else {\n    formattedPokemon = capitalize(pokemon);\n  }\n  return formattedPokemon;\n}\nfunction formatAllMoves(moves) {\n  const formattedMoves = moves.map(move => formatMove(move.move.name)).sort();\n  return formattedMoves;\n}\nfunction formatAllPokemon(pokemonList) {\n  const formattedList = pokemonList.map(pokemon => formatPokemon(pokemon));\n  return formattedList;\n}\nfunction removeFormatting(str) {\n  if (str === '') {\n    return str;\n  }\n  let revertedStr;\n  if (/[\\s.-]+/.test(str)) {\n    let words = str.split(/[\\s.-]+/);\n    // Remove empty string elements\n    if (words[words.length - 1] === '') {\n      words.pop();\n    }\n    const lowercasedWords = words.map(word => word.toLowerCase());\n    revertedStr = lowercasedWords.join('-');\n  } else {\n    revertedStr = str.toLowerCase();\n  }\n  return revertedStr;\n}\n\nexport { capitalize, formatMove, formatPokemon, formatAllMoves, formatAllPokemon, removeFormatting };","import React, { useState } from 'react';\nimport { formatAllMoves, formatAllPokemon, removeFormatting } from '../helpers';\n\nfunction TeamMember(props) {\n  const [name, setName] = useState(props.data ? props.data.name.charAt(0).toUpperCase() + props.data.name.slice(1) : '');\n  const [isShowingMoves, setIsShowingMoves] = useState(false);\n  const [moves, setMoves] = useState(Array(4).fill(''));\n\n  const pokemonList = formatAllPokemon(props.pokemonList).map((pokemon, index) => \n    <option\n      key={index}\n      value={pokemon}/>\n  );\n\n  let moveInputs = [];\n  for (let i = 0; i < moves.length; i++) {\n    moveInputs.push(\n      <input\n        key={i}\n        value={moves[i]}\n        placeholder={`Move #${i + 1}...`}\n        list={`moves-${props.index}`}\n        onChange={(e) => handleMoveChange(i, e)}\n        className=\"team-member-move-input\" />\n    );\n  }\n\n  function handleChange(e) {\n    setName(e.target.value);\n    // Resets moves\n    let temp = [...moves];\n    for (let i = 0; i < moves.length; i++) {\n      temp[i] = '';\n    }\n    setMoves(temp);\n    props.onTeamChange(removeFormatting(e.target.value), props.index);\n\n  }\n  function handleMoveChange(index, e) {\n    let tempMoves = [...moves];\n    tempMoves[index] = e.target.value;\n    setMoves(tempMoves);\n    props.onMoveChange(removeFormatting(e.target.value), props.index, index);\n  }\n  function handleClick() {\n    setIsShowingMoves(!isShowingMoves);\n  }\n\n  return (\n    <li className=\"team-member\">\n      {props.data ?\n        <img\n          src={props.data.sprites.other['official-artwork'].front_default}\n          alt={props.data.name}\n          className={`team-member-img ${props.data.types[0].type.name}-bg`}/>\n        :\n        <div className=\"team-member-placeholder\">?</div>\n      }\n      <input\n        value={name}\n        placeholder=\"Pokémon name...\"\n        spellCheck=\"false\"\n        list=\"pokemon\"\n        onChange={handleChange}\n        className=\"team-member-name-input\"/>\n      <datalist id=\"pokemon\">\n        {pokemonList}\n      </datalist>\n      <ul className=\"team-member-types-list\">\n        {props.data ?\n          <>\n            {props.data.types.map(type => \n              <li key={type.slot} className={`team-member-type ${type.type.name}-text`}>\n                {type.type.name}\n                <span style={{ color: '#464646'}}>\n                  {props.data.types.length === 2 && props.data.types.indexOf(type) === 0 ? '/' : ''}\n                </span>\n              </li>\n            )}\n          </>\n        : <li key=\"0\">???</li>\n        } \n      </ul>\n      <button\n        onClick={handleClick}\n        className=\"team-member-moves-btn\">\n        {isShowingMoves ? 'Hide' : 'Moves'}\n      </button>\n      <div className=\"team-member-moves-wrapper\">\n      {isShowingMoves &&\n        <div className=\"team-member-moves-container\">\n          {moveInputs}\n          <datalist id={`moves-${props.index}`}>\n            {props.data &&\n              (formatAllMoves(props.data.moves).filter(move => !moves.includes(move))\n              .map((move, index) => \n                <option key={index} value={move} />\n              ))\n            }\n          </datalist>\n        </div>\n      }\n      </div>\n    </li>\n  );\n}\n\nexport default TeamMember;","import React from 'react';\nimport { capitalize, formatMove } from '../helpers';\n\nfunction Popover(props) {\n  function setDamageValueClass(value) {\n    const valueClass = value > 0 && value < 1 ? \"positive bold\"\n                     : value > 1 ? \"negative bold\"\n                     : value === 0 ? \"no-damage bold\"\n                     : \"\";\n    return valueClass;\n  }\n\n  const defensiveTemplate = (\n    <>\n      <h3 className={`popover-heading ${props.name}-text`}>{capitalize(props.name)}</h3>\n      <ul className=\"popover-team\">\n        {props.team.map((member, index) => {\n          const damageValue = props.damageValues[index];\n          return member.data &&\n            <li key={index}>\n              {capitalize(member.data.name)}\n              <span className={setDamageValueClass(damageValue)}>{` (${damageValue}x)`}</span>\n            </li>\n        })}\n      </ul>\n    </>\n  );\n  const offensiveTemplate = (\n    <>\n      <h3 className=\"popover-heading\">\n        {`Super effective against `}\n        <span className={`${props.name}-text`}>{capitalize(props.name)}</span>\n      </h3>\n      <ul>\n        {props.team.map((member, teamIndex) => {\n          return member.data && member.moves.filter(move => move.data && move.damage && move.damage.hasOwnProperty(props.name))\n          .map((move, moveIndex) =>\n            <li key={`member-${teamIndex}-move-${moveIndex}`}>\n              <span className={`${move.data.type.name}-text bold`}>{formatMove(move.data.name)}</span>\n              {` - ${capitalize(member.data.name)}`}\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  );\n\n  return (\n    <>\n    {props.isVisible &&\n      <div className={\"popover\" + ((props.type === 'Offensive') ? \" bottom\" : \"\")}>\n        {props.team.every(member => !member.data) ?\n          <p>Please select a Pokémon.</p>\n          :\n          (props.type === 'Defensive' ? defensiveTemplate : offensiveTemplate)\n        }\n      </div>\n    }\n    </>\n  );\n}\n\nexport default Popover;","import React, { useState } from 'react';\nimport Popover from './Popover';\n\nfunction TypeChart(props) {\n  const [visibilityChart, setVisibilityChart] = useState(Array(18).fill(false));\n\n  function handleMouseEnter(index) {\n    let temp = [...visibilityChart];\n    temp[index] = true;\n    setVisibilityChart(temp);\n  }\n  function handleMouseLeave(index) {\n    let temp = [...visibilityChart];\n    temp[index] = false;\n    setVisibilityChart(temp);\n  }\n\n  const chart = props.types.map((type, index) => {\n    const typeChartDamageValue = props.damageValues[type].type_chart;\n    return <li key={type} className=\"type\">\n      <div\n        onMouseEnter={() => handleMouseEnter(index)}\n        onMouseLeave={() => handleMouseLeave(index)}\n        className={`type-label ${type}-bg`}>\n        {type}\n      </div>\n      <Popover\n        name={type}\n        index={index}\n        type={props.name}\n        isVisible={visibilityChart[index]}\n        team={props.team}\n        damageValues={props.name === 'Defensive' ? props.damageValues[type].popover : []} />\n      <p className={\"damage-value\" + (typeChartDamageValue > 0 ? \" positive\" : (typeChartDamageValue < 0 ? \" negative\" : \"\"))}>\n        {typeChartDamageValue > 0 ? `+${typeChartDamageValue}` : typeChartDamageValue}\n      </p>\n    </li>\n  });\n  \n  return (\n    <div className={\"type-chart-container\" + (props.name === 'Defensive' ? \" defensive-type-chart\" : \" offensive-type-chart\")}>\n      <h2 className=\"type-chart-heading\">{`${props.name} Coverage`}</h2>\n      <ul className=\"type-chart\">\n        {chart}\n      </ul>\n    </div>\n  );\n}\n\nexport default TypeChart;","import React, { useEffect, useState } from 'react';\nimport TeamMember from './components/TeamMember';\nimport TypeChart from './components/TypeChart';\n// import {v4 as uuidv4 } from 'uuid';\n\nconst TYPES = [\n  'normal', 'fighting', 'flying', 'poison', 'ground', 'rock',\n  'bug', 'ghost', 'steel', 'fire', 'water', 'grass',\n  'electric', 'psychic', 'ice', 'dragon', 'dark', 'fairy'\n];\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [pokemonNames, setPokemonNames] = useState([]);\n  const [moveNames, setMoveNames] = useState([]);\n  const [typeData, setTypeData] = useState([]);\n  const [team, setTeam] = useState(Array.from({length: 6}, () => (\n    {\n      data: null,\n      moves: Array.from({length: 4}, () => ({data: null, damage: null, checked: false})),\n      damage: null,\n      checked: false\n    }\n  )));\n  const [damageValues, setDamageValues] = useState(() => {\n    let defensiveObj = {};\n    let offensiveObj = {};\n    TYPES.forEach(type => {\n      defensiveObj[type] = {type_chart: 0, popover: [1, 1, 1, 1, 1, 1]};\n      offensiveObj[type] = {type_chart: 0};\n    });\n    const initialState = {\n      defensive: defensiveObj,\n      offensive: offensiveObj\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    async function fetchPokemonNames() {\n      let response = await fetch('https://pokeapi.co/api/v2/pokedex/2/');\n      let result = await response.json();\n      result.pokemon_entries.forEach(pokemon => setPokemonNames(prevPokemonNames => [...prevPokemonNames, pokemon.pokemon_species.name]));\n    }\n\n    async function fetchMoveNames() {\n      let response = await fetch('https://pokeapi.co/api/v2/move?limit=844');\n      let result = await response.json();\n      result.results.forEach(move => setMoveNames(prevMoveNames => [...prevMoveNames, move.name]));\n    }\n\n    async function fetchTypeData() {\n      let response = await fetch('https://pokeapi.co/api/v2/type');\n      let result = await response.json();\n\n      let typeURLs = [];\n      // Removes unknown and shadow types because they aren't considered part of the 18 types\n      result.results.filter(type => type.name !== 'unknown' && type.name !== 'shadow')\n      .forEach(type => typeURLs.push(type.url));\n\n      let values = await Promise.all(typeURLs.map(url => fetch(url)));\n      let valuesResult = await Promise.all(values.map(value => value.json()));\n      setTypeData(valuesResult);\n    }\n\n    Promise.all([fetchPokemonNames(), fetchMoveNames(), fetchTypeData()])\n    .then(() => {\n      setIsLoaded(true);\n    },\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    }\n    );\n\n  }, []);\n  function calculateDefensiveDamage(teamValue) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    teamValue.forEach((member, index) => {\n      if (member.data && !member.checked) {\n        let tempDamage = {};\n        let typeTracker = {};\n        TYPES.forEach(type => {\n          typeTracker[type] = {\n            decremented: false,\n            incremented: false\n          };\n        });\n        member.data.types.forEach(type => {\n          const found = typeData.find(value => value.name === type.type.name);\n          if (found) {\n            // Double damage\n            found.damage_relations.double_damage_from.forEach(damagingType => {\n              // Ensures damage value isn't duplicated for quad weak types\n              if (!typeTracker[damagingType.name].decremented) {\n                // Sets damage value in type chart\n                tempDamageValues.defensive[damagingType.name].type_chart--;\n                // Sets damage value of damaging type for each member\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]-- : tempDamage[damagingType.name] = -1;\n                typeTracker[damagingType.name].decremented = true;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} is weak to ${damagingType.name}`);\n              // Sets damage value in popover\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 2\n            });\n            // Half damage\n            found.damage_relations.half_damage_from.forEach(damagingType => {\n              // Ensures damage value isn't duplicated for quad resistant types\n              if (!typeTracker[damagingType.name].incremented) {\n                tempDamageValues.defensive[damagingType.name].type_chart++;\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]++ : tempDamage[damagingType.name] = 1;\n                typeTracker[damagingType.name].incremented = true;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} resists ${damagingType.name}`);\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 0.5;\n            });\n            // No damage\n            found.damage_relations.no_damage_from.forEach(damagingType => {\n              // Adds back decremented damage value because unaffected types take precedence\n              const count = (typeTracker[damagingType.name].decremented) ? 2 : 1;\n              for (let i = 0; i < count; i++) {\n                tempDamageValues.defensive[damagingType.name].type_chart++;\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]++ : tempDamage[damagingType.name] = 1;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} is unaffected by ${damagingType.name}`);\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 0;\n            });\n          }\n        });\n        // Removes types with damage values of 0 since they're unnecessary\n        for (const type in tempDamage) {\n          if (tempDamage[type] === 0) {\n            delete tempDamage[type];\n          }\n        };\n        member.checked = true;\n        member.damage = tempDamage;\n      }\n    });\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function resetDefensiveDamage(index) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    const member = tempTeam[index];\n\n    // Reset type chart damage values\n    for (const damagingType in member.damage) {\n      const damageValue = member.damage[damagingType];\n      if (damageValue < 0) {\n        tempDamageValues.defensive[`${damagingType}`].type_chart += Math.abs(damageValue);\n      } else {\n        tempDamageValues.defensive[`${damagingType}`].type_chart -= Math.abs(damageValue);\n      }\n    }\n    // Reset popover damage values\n    for (const damagingType in tempDamageValues.defensive) {\n      tempDamageValues.defensive[damagingType].popover[index] = 1;\n    }\n    member.damage = null;\n    member.checked = false;\n  \n    // Reset moves\n    member.moves.forEach(move => {\n      // Reset type chart damage values\n      for (const damagedType in move.damage) {\n        const damageValue = move.damage[damagedType];\n        if (damageValue < 0) {\n          tempDamageValues.offensive[damagedType].type_chart += Math.abs(damageValue);\n        } else {\n          tempDamageValues.offensive[damagedType].type_chart -= Math.abs(damageValue);\n        }\n      }\n      move.data = null;\n      move.damage = null;\n      move.checked = false;\n    })\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function calculateOffensiveDamage(teamValue) {\n    let tempDamageValues = {...damageValues};\n    teamValue.forEach(member => {\n      if (member.data) {\n        member.moves.forEach(move => {\n          if (move.data && !move.checked) {\n            let tempDamage = {};\n            if (move.data.damage_class.name === 'physical' || move.data.damage_class.name === 'special') {\n              const found = typeData.find(value => value.name === move.data.type.name);\n              if (found) {\n                found.damage_relations.double_damage_to.forEach(damagedType => {\n                  // Sets damage value in type chart\n                  tempDamageValues.offensive[damagedType.name].type_chart++;\n                  // Sets damage value of damaged type for each move\n                  tempDamage[damagedType.name] ? tempDamage[damagedType.name]++ : tempDamage[damagedType.name] = 1;\n                });\n              }\n            }\n            move.checked = true;\n            move.damage = tempDamage;\n          }\n        });\n      }\n    });\n    setDamageValues(tempDamageValues);\n  }\n  function resetOffensiveDamage(teamIndex, moveIndex) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    const member = tempTeam[teamIndex];\n    let move = member.moves[moveIndex];\n\n    // Reset type chart damage values\n    for (const damagedType in move.damage) {\n      const damageValue = move.damage[damagedType];\n      if (damageValue < 0) {\n        tempDamageValues.offensive[damagedType].type_chart += Math.abs(damageValue);\n      } else {\n        tempDamageValues.offensive[damagedType].type_chart -= Math.abs(damageValue);\n      }\n    }\n    move.damage = null;\n    move.checked = false;\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function handleTeamChange(member, index) {\n    let temp = [...team];\n    const found = pokemonNames.find(pokemon => pokemon === member);\n    if (found) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${found}`)\n      .then(res => res.json())\n      .then(result => {\n        temp[index].data = result;\n        setTeam(temp);\n        calculateDefensiveDamage(temp);\n      });\n    } else {\n      temp[index].data = null;\n      setTeam(temp);\n      resetDefensiveDamage(index);\n    }\n  }\n  function handleMoveChange(move, teamIndex, moveIndex) {\n   let temp = [...team];\n   let member = temp[teamIndex];\n   const found = moveNames.find(moveName => moveName === move);\n   if (found) {\n     fetch(`https://pokeapi.co/api/v2/move/${found}/`)\n     .then(res => res.json())\n     .then(result => {\n       member.moves[moveIndex].data = result;\n       setTeam(temp);\n       calculateOffensiveDamage(temp);\n     })\n   } else {\n    member.moves[moveIndex].data = null;\n    setTeam(temp);\n    resetOffensiveDamage(teamIndex, moveIndex);\n   }\n  }\n\n  const loadingTemplate = (\n    <div className=\"loading-container\">\n      <p className=\"loading-text\">Loading...</p>\n    </div>\n  );\n\n  if (error) {\n    return <div>Error: {error.message} </div>;\n  } else if (!isLoaded) {\n    return loadingTemplate;\n  } else {\n    return (\n      <div>\n        <h1>Pokémon Team Builder</h1>\n        <ul className=\"team\">\n          {team.map((member, index) => \n            <TeamMember\n              key={index}\n              index={index}\n              data={member.data}\n              pokemonList={pokemonNames}\n              onTeamChange={handleTeamChange}\n              onMoveChange={handleMoveChange} />\n          )}\n        </ul>\n        <TypeChart\n          name=\"Defensive\"\n          types={typeData.map(type => type.name)}\n          damageValues={damageValues.defensive}\n          team={team} />\n        <TypeChart\n          name=\"Offensive\"\n          types={typeData.map(type => type.name)}\n          damageValues={damageValues.offensive}\n          team={team} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}