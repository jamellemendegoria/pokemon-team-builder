{"version":3,"sources":["helpers.js","components/TeamMember.js","components/popovers/DefensivePopover.js","components/popovers/OffensivePopover.js","components/TypeChart.js","App.js","reportWebVitals.js","index.js"],"names":["movesWithHyphens","capitalize","str","toUpperCase","slice","capitalizeAll","split","map","word","join","removeHyphens","replace","formatMove","move","formattedMove","includes","replaceAll","formatAllMoves","moves","name","sort","formatAllPokemon","pokemonList","pokemon","formattedPokemon","formatPokemon","removeFormatting","revertedStr","test","words","length","pop","toLowerCase","StyledCard","styled","Card","StyledCardMedia","CardMedia","StyledCardContent","CardContent","StyledCollapse","Collapse","StyledAutocomplete","Autocomplete","StyledButton","Button","TeamMember","props","useState","data","charAt","setName","isShowingMoves","setIsShowingMoves","Array","fill","setMoves","component","image","sprites","other","front_default","alt","className","inputValue","fullWidth","size","options","renderInput","params","TextField","label","onInputChange","e","value","temp","i","onTeamChange","index","types","type","style","color","indexOf","slot","CardActions","variant","disabled","onClick","in","filter","tempMoves","onMoveChange","handleMoveChange","StyledContainer","div","DefensivePopover","Popover","id","sx","pointerEvents","open","isVisible","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","team","every","member","damageValue","damageValues","OffensivePopover","teamIndex","damage","hasOwnProperty","moveIndex","Paper","StyledChart","ul","TypeChart","setAnchorEl","handlePopoverClose","chart","typeChartDamageValue","type_chart","onMouseEnter","event","target","handlePopoverOpen","onMouseLeave","aria-owns","Boolean","undefined","aria-haspopup","popover","TYPES","App","error","setError","isLoaded","setIsLoaded","pokemonNames","setPokemonNames","moveNames","setMoveNames","typeData","setTypeData","from","checked","setTeam","defensiveObj","offensiveObj","forEach","defensive","offensive","setDamageValues","handleTeamChange","found","find","fetch","then","res","json","result","teamValue","tempTeam","tempDamageValues","tempDamage","typeTracker","decremented","incremented","damage_relations","double_damage_from","damagingType","half_damage_from","no_damage_from","count","calculateDefensiveDamage","Math","abs","damagedType","resetDefensiveDamage","moveName","damage_class","double_damage_to","calculateOffensiveDamage","resetOffensiveDamage","useEffect","a","response","pokemon_entries","prevPokemonNames","pokemon_species","results","prevMoveNames","typeURLs","push","url","Promise","all","values","valuesResult","fetchPokemonNames","fetchMoveNames","fetchTypeData","loadingTemplate","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f059adb.chunk.js","sourcesContent":["const movesWithHyphens = [\n  'baby-doll-eyes','double-edge', 'freeze-dry', 'lock-on', 'mud-slap',\n  'multi-attack', 'power-up-punch', 'self-destruct', 'soft-boiled', 'topsy-turvy',\n  'trick-or-treat', 'u-turn', 'wake-up-slap', 'will-o-wisp', 'x-scissor'\n];\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nfunction capitalizeAll(str) {\n  const words = str.split(/\\s/);\n  const capitalizedWords = words.map(word => capitalize(word));\n  return capitalizedWords.join(' ');\n}\nfunction removeHyphens(str) {\n  return str.replace(/-/g, ' ');\n}\nfunction formatMove(move) {\n  let formattedMove;\n  if (move.includes('-')) {\n    formattedMove = capitalizeAll(removeHyphens(move));\n    // If move name is supposed to include hyphens\n    if (movesWithHyphens.includes(move)) {\n      // These move names only have one hyphen\n      formattedMove = (move === 'baby-doll-eyes' || move === 'power-up-punch' || move === 'wake-up-slap') ?\n      formattedMove.replace(' ', '-') : formattedMove.replaceAll(' ', '-');\n    }\n  } else {\n    formattedMove = capitalize(move);\n  }\n  return formattedMove;\n}\nfunction formatPokemon(pokemon) {\n  let formattedPokemon;\n  if (pokemon.includes('-')) {\n    formattedPokemon = capitalizeAll(removeHyphens(pokemon));\n    // Handles Pokémon names with special requirements\n    if (pokemon === 'mr-mime') {\n      formattedPokemon = formattedPokemon.replace(' ', '. ');\n    }\n  } else {\n    formattedPokemon = capitalize(pokemon);\n  }\n  return formattedPokemon;\n}\nfunction formatAllMoves(moves) {\n  const formattedMoves = moves.map(move => formatMove(move.move.name)).sort();\n  return formattedMoves;\n}\nfunction formatAllPokemon(pokemonList) {\n  const formattedList = pokemonList.map(pokemon => formatPokemon(pokemon));\n  return formattedList;\n}\nfunction removeFormatting(str) {\n  if (str === '') {\n    return str;\n  }\n  let revertedStr;\n  if (/[\\s.-]+/.test(str)) {\n    let words = str.split(/[\\s.-]+/);\n    // Remove empty string elements\n    if (words[words.length - 1] === '') {\n      words.pop();\n    }\n    const lowercasedWords = words.map(word => word.toLowerCase());\n    revertedStr = lowercasedWords.join('-');\n  } else {\n    revertedStr = str.toLowerCase();\n  }\n  return revertedStr;\n}\n\nexport { capitalize, formatMove, formatPokemon, formatAllMoves, formatAllPokemon, removeFormatting };","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Collapse,\n  Autocomplete,\n  TextField,\n} from '@mui/material';\n\nimport { formatAllMoves, formatAllPokemon, removeFormatting } from '../helpers';\n\n/* STYLED COMPONENTS */\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.5em;\n\n  & .placeholder {\n    width: 125px;\n    height: 125px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 36px;\n  }\n\n  & ul {\n    display: flex;\n    margin-top: 0.5em;\n  }\n\n  & ul li {\n    text-transform: capitalize;\n  }\n`;\n\nconst StyledCardMedia = styled(CardMedia)`\n  width: 125px;\n  height: 125px;\n`;\n\nconst StyledCardContent = styled(CardContent)`\n  padding: 0;\n\n  :last-child {\n    padding: 0;\n  }\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  width: 100%;\n`;\n\nconst StyledAutocomplete = styled(Autocomplete)`\n  margin-top: 0.5em;\n`;\n\nconst StyledButton = styled(Button)`\n  background-color: #464646;\n  font-size: 12px;\n\n  :hover {\n    background-color: #585858;\n  }\n`;\n\nfunction TeamMember(props) {\n  const [name, setName] = useState(\n    props.data\n      ? props.data.name.charAt(0).toUpperCase() + props.data.name.slice(1)\n      : ''\n  );\n  const [isShowingMoves, setIsShowingMoves] = useState(false);\n  const [moves, setMoves] = useState(Array(4).fill(''));\n\n  function handleChange(e, value) {\n    setName(value);\n    // Resets moves\n    let temp = [...moves];\n    for (let i = 0; i < moves.length; i++) {\n      temp[i] = '';\n    }\n    setMoves(temp);\n    props.onTeamChange(removeFormatting(value), props.index);\n  }\n\n  function handleMoveChange(index, e, value) {\n    let tempMoves = [...moves];\n    tempMoves[index] = value;\n    setMoves(tempMoves);\n    props.onMoveChange(removeFormatting(value), props.index, index);\n  }\n\n  function handleClick() {\n    setIsShowingMoves(!isShowingMoves);\n  }\n\n  return (\n    <li>\n      <StyledCard>\n        {props.data ? (\n          <StyledCardMedia\n            component=\"img\"\n            image={props.data.sprites.other['official-artwork'].front_default}\n            alt={props.data.name}\n          />\n        ) : (\n          // <img\n          //   src={props.data.sprites.other['official-artwork'].front_default}\n          //   alt={props.data.name}\n          //   className={`team-member-img ${props.data.types[0].type.name}-bg`}\n          // />\n          <div className=\"placeholder\">?</div>\n        )}\n        <StyledAutocomplete\n          inputValue={name}\n          fullWidth\n          size=\"small\"\n          options={formatAllPokemon(props.pokemonList)}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Pokémon name...\" />\n          )}\n          onInputChange={handleChange}\n        />\n        <ul>\n          {props.data ? (\n            <>\n              {props.data.types.map((type) => (\n                <li key={type.slot} className={`${type.type.name}-text`}>\n                  {type.type.name}\n                  <span style={{ color: '#464646' }}>\n                    {props.data.types.length === 2 &&\n                    props.data.types.indexOf(type) === 0\n                      ? '/'\n                      : ''}\n                  </span>\n                </li>\n              ))}\n            </>\n          ) : (\n            <li key=\"0\">???</li>\n          )}\n        </ul>\n        <CardActions>\n          <StyledButton\n            variant=\"contained\"\n            disabled={!props.data}\n            onClick={handleClick}\n          >\n            {isShowingMoves ? 'Hide' : 'Moves'}\n          </StyledButton>\n        </CardActions>\n        <StyledCollapse in={isShowingMoves}>\n          <StyledCardContent>\n            {moves.map((move, i) => (\n              <StyledAutocomplete\n                key={i}\n                inputValue={move}\n                fullWidth\n                size=\"small\"\n                options={\n                  props.data\n                    ? formatAllMoves(props.data.moves).filter(\n                        // removes moves already selected\n                        (move) => !moves.includes(move)\n                      )\n                    : []\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label={`Move #${i + 1}...`} />\n                )}\n                onInputChange={(e, value) => handleMoveChange(i, e, value)}\n              />\n            ))}\n          </StyledCardContent>\n        </StyledCollapse>\n      </StyledCard>\n    </li>\n  );\n}\n\nexport default TeamMember;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Popover } from '@mui/material';\n\nimport { capitalize } from '../../helpers';\n\n/* STYLED COMPONENTS */\nconst StyledContainer = styled.div`\n  padding: 1em;\n\n  & h3 {\n    margin-bottom: 0.5em;\n    font-size: 18px;\n  }\n`;\n\nfunction DefensivePopover(props) {\n  function setDamageValueClass(value) {\n    const valueClass =\n      value > 0 && value < 1\n        ? 'positive bold'\n        : value > 1\n        ? 'negative bold'\n        : value === 0\n        ? 'no-damage bold'\n        : '';\n    return valueClass;\n  }\n\n  return (\n    <Popover\n      id=\"mouse-over-popover\"\n      sx={{\n        pointerEvents: 'none',\n      }}\n      open={props.isVisible}\n      anchorEl={props.anchorEl}\n      onClose={props.onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      disableRestoreFocus\n    >\n      <StyledContainer>\n        {props.team.every((member) => !member.data) ? (\n          <p>Please select a Pokémon.</p>\n        ) : (\n          <>\n            <h3 className={`${props.name}-text`}>{capitalize(props.name)}</h3>\n            <ul>\n              {props.team.map((member, index) => {\n                const damageValue = props.damageValues[index];\n                return (\n                  member.data && (\n                    <li key={index}>\n                      {capitalize(member.data.name)}\n                      <span\n                        className={setDamageValueClass(damageValue)}\n                      >{` (${damageValue}x)`}</span>\n                    </li>\n                  )\n                );\n              })}\n            </ul>\n          </>\n        )}\n      </StyledContainer>\n    </Popover>\n  );\n}\n\nexport default DefensivePopover;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Popover } from '@mui/material';\n\nimport { capitalize, formatMove } from '../../helpers';\n\n/* STYLED COMPONENTS */\nconst StyledContainer = styled.div`\n  padding: 1em;\n\n  & h3 {\n    margin-bottom: 0.5em;\n    font-size: 18px;\n  }\n`;\n\nfunction OffensivePopover(props) {\n  return (\n    <Popover\n      id=\"mouse-over-popover\"\n      sx={{\n        pointerEvents: 'none',\n      }}\n      open={props.isVisible}\n      anchorEl={props.anchorEl}\n      onClose={props.onClose}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      disableRestoreFocus\n    >\n      <StyledContainer>\n        {props.team.every((member) => !member.data) ? (\n          <p>Please select a Pokémon.</p>\n        ) : (\n          <>\n            <h3>\n              {`Super effective against `}\n              <span className={`${props.name}-text`}>\n                {capitalize(props.name)}\n              </span>\n            </h3>\n            <ul>\n              {props.team.map((member, teamIndex) => {\n                return (\n                  member.data &&\n                  member.moves\n                    .filter(\n                      (move) =>\n                        move.data &&\n                        move.damage &&\n                        move.damage.hasOwnProperty(props.name)\n                    )\n                    .map((move, moveIndex) => (\n                      <li key={`member-${teamIndex}-move-${moveIndex}`}>\n                        <span className={`${move.data.type.name}-text bold`}>\n                          {formatMove(move.data.name)}\n                        </span>\n                        {` - ${capitalize(member.data.name)}`}\n                      </li>\n                    ))\n                );\n              })}\n            </ul>\n          </>\n        )}\n      </StyledContainer>\n    </Popover>\n  );\n}\n\nexport default OffensivePopover;\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Paper } from '@mui/material';\n\nimport DefensivePopover from './popovers/DefensivePopover';\nimport OffensivePopover from './popovers/OffensivePopover';\n\n/* STYLED COMPONENTS */\n\nconst StyledContainer = styled(Paper)`\n  margin-top: 1em;\n  text-align: center;\n\n  & h2 {\n    margin-bottom: 1em;\n    padding-top: 1em;\n    font-size: 24px;\n  }\n`;\n\nconst StyledChart = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n\n  & li {\n    position: relative;\n  }\n\n  & .type-label {\n    position: relative;\n    margin: 0 1em;\n    color: #fff;\n    text-transform: capitalize;\n    border-radius: 5px;\n    font-size: 16px;\n  }\n`;\n\nfunction TypeChart(props) {\n  const [anchorEl, setAnchorEl] = useState(Array(18).fill(false));\n\n  const handlePopoverOpen = (index, event) => {\n    let temp = [...anchorEl];\n    temp[index] = event.target;\n    setAnchorEl(temp);\n  };\n\n  const handlePopoverClose = (index) => {\n    let temp = [...anchorEl];\n    temp[index] = null;\n    setAnchorEl(temp);\n  };\n\n  const chart = props.types.map((type, index) => {\n    const typeChartDamageValue = props.damageValues[type].type_chart;\n    return (\n      <li key={type}>\n        <div\n          onMouseEnter={(e) => handlePopoverOpen(index, e)}\n          onMouseLeave={() => handlePopoverClose(index)}\n          className={`type-label ${type}-bg`}\n          aria-owns={\n            Boolean(anchorEl[index]) ? 'mouse-over-popover' : undefined\n          }\n          aria-haspopup=\"true\"\n        >\n          {type}\n        </div>\n        {props.name === 'Defensive' ? (\n          <DefensivePopover\n            name={type}\n            index={index}\n            isVisible={Boolean(anchorEl[index])}\n            team={props.team}\n            damageValues={props.damageValues[type].popover}\n            anchorEl={anchorEl[index]}\n            onClose={() => handlePopoverClose(index)}\n          />\n        ) : (\n          <OffensivePopover\n            name={type}\n            index={index}\n            isVisible={Boolean(anchorEl[index])}\n            team={props.team}\n            anchorEl={anchorEl[index]}\n            onClose={() => handlePopoverClose(index)}\n          />\n        )}\n        <p\n          className={\n            'damage-value' +\n            (typeChartDamageValue > 0\n              ? ' positive'\n              : typeChartDamageValue < 0\n              ? ' negative'\n              : '')\n          }\n        >\n          {typeChartDamageValue > 0\n            ? `+${typeChartDamageValue}`\n            : typeChartDamageValue}\n        </p>\n      </li>\n    );\n  });\n\n  return (\n    <StyledContainer>\n      <h2>{`${props.name} Coverage`}</h2>\n      <StyledChart>{chart}</StyledChart>\n    </StyledContainer>\n  );\n}\n\nexport default TypeChart;\n","import React, { useEffect, useState } from 'react';\nimport TeamMember from './components/TeamMember';\nimport TypeChart from './components/TypeChart';\n// import {v4 as uuidv4 } from 'uuid';\n\nconst TYPES = [\n  'normal', 'fighting', 'flying', 'poison', 'ground', 'rock',\n  'bug', 'ghost', 'steel', 'fire', 'water', 'grass',\n  'electric', 'psychic', 'ice', 'dragon', 'dark', 'fairy'\n];\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [pokemonNames, setPokemonNames] = useState([]);\n  const [moveNames, setMoveNames] = useState([]);\n  const [typeData, setTypeData] = useState([]);\n  const [team, setTeam] = useState(Array.from({length: 6}, () => (\n    {\n      data: null,\n      moves: Array.from({length: 4}, () => ({data: null, damage: null, checked: false})),\n      damage: null,\n      checked: false\n    }\n  )));\n  const [damageValues, setDamageValues] = useState(() => {\n    let defensiveObj = {};\n    let offensiveObj = {};\n    TYPES.forEach(type => {\n      defensiveObj[type] = {type_chart: 0, popover: [1, 1, 1, 1, 1, 1]};\n      offensiveObj[type] = {type_chart: 0};\n    });\n    const initialState = {\n      defensive: defensiveObj,\n      offensive: offensiveObj\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    async function fetchPokemonNames() {\n      let response = await fetch('https://pokeapi.co/api/v2/pokedex/2/');\n      let result = await response.json();\n      result.pokemon_entries.forEach(pokemon => setPokemonNames(prevPokemonNames => [...prevPokemonNames, pokemon.pokemon_species.name]));\n    }\n\n    async function fetchMoveNames() {\n      let response = await fetch('https://pokeapi.co/api/v2/move?limit=844');\n      let result = await response.json();\n      result.results.forEach(move => setMoveNames(prevMoveNames => [...prevMoveNames, move.name]));\n    }\n\n    async function fetchTypeData() {\n      let response = await fetch('https://pokeapi.co/api/v2/type');\n      let result = await response.json();\n\n      let typeURLs = [];\n      // Removes unknown and shadow types because they aren't considered part of the 18 types\n      result.results.filter(type => type.name !== 'unknown' && type.name !== 'shadow')\n      .forEach(type => typeURLs.push(type.url));\n\n      let values = await Promise.all(typeURLs.map(url => fetch(url)));\n      let valuesResult = await Promise.all(values.map(value => value.json()));\n      setTypeData(valuesResult);\n    }\n\n    Promise.all([fetchPokemonNames(), fetchMoveNames(), fetchTypeData()])\n    .then(() => {\n      setIsLoaded(true);\n    },\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    }\n    );\n\n  }, []);\n  function calculateDefensiveDamage(teamValue) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    teamValue.forEach((member, index) => {\n      if (member.data && !member.checked) {\n        let tempDamage = {};\n        let typeTracker = {};\n        TYPES.forEach(type => {\n          typeTracker[type] = {\n            decremented: false,\n            incremented: false\n          };\n        });\n        member.data.types.forEach(type => {\n          const found = typeData.find(value => value.name === type.type.name);\n          if (found) {\n            // Double damage\n            found.damage_relations.double_damage_from.forEach(damagingType => {\n              // Ensures damage value isn't duplicated for quad weak types\n              if (!typeTracker[damagingType.name].decremented) {\n                // Sets damage value in type chart\n                tempDamageValues.defensive[damagingType.name].type_chart--;\n                // Sets damage value of damaging type for each member\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]-- : tempDamage[damagingType.name] = -1;\n                typeTracker[damagingType.name].decremented = true;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} is weak to ${damagingType.name}`);\n              // Sets damage value in popover\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 2\n            });\n            // Half damage\n            found.damage_relations.half_damage_from.forEach(damagingType => {\n              // Ensures damage value isn't duplicated for quad resistant types\n              if (!typeTracker[damagingType.name].incremented) {\n                tempDamageValues.defensive[damagingType.name].type_chart++;\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]++ : tempDamage[damagingType.name] = 1;\n                typeTracker[damagingType.name].incremented = true;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} resists ${damagingType.name}`);\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 0.5;\n            });\n            // No damage\n            found.damage_relations.no_damage_from.forEach(damagingType => {\n              // Adds back decremented damage value because unaffected types take precedence\n              const count = (typeTracker[damagingType.name].decremented) ? 2 : 1;\n              for (let i = 0; i < count; i++) {\n                tempDamageValues.defensive[damagingType.name].type_chart++;\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]++ : tempDamage[damagingType.name] = 1;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} is unaffected by ${damagingType.name}`);\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 0;\n            });\n          }\n        });\n        // Removes types with damage values of 0 since they're unnecessary\n        for (const type in tempDamage) {\n          if (tempDamage[type] === 0) {\n            delete tempDamage[type];\n          }\n        };\n        member.checked = true;\n        member.damage = tempDamage;\n      }\n    });\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function resetDefensiveDamage(index) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    const member = tempTeam[index];\n\n    // Reset type chart damage values\n    for (const damagingType in member.damage) {\n      const damageValue = member.damage[damagingType];\n      if (damageValue < 0) {\n        tempDamageValues.defensive[`${damagingType}`].type_chart += Math.abs(damageValue);\n      } else {\n        tempDamageValues.defensive[`${damagingType}`].type_chart -= Math.abs(damageValue);\n      }\n    }\n    // Reset popover damage values\n    for (const damagingType in tempDamageValues.defensive) {\n      tempDamageValues.defensive[damagingType].popover[index] = 1;\n    }\n    member.damage = null;\n    member.checked = false;\n  \n    // Reset moves\n    member.moves.forEach(move => {\n      // Reset type chart damage values\n      for (const damagedType in move.damage) {\n        const damageValue = move.damage[damagedType];\n        if (damageValue < 0) {\n          tempDamageValues.offensive[damagedType].type_chart += Math.abs(damageValue);\n        } else {\n          tempDamageValues.offensive[damagedType].type_chart -= Math.abs(damageValue);\n        }\n      }\n      move.data = null;\n      move.damage = null;\n      move.checked = false;\n    })\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function calculateOffensiveDamage(teamValue) {\n    let tempDamageValues = {...damageValues};\n    teamValue.forEach(member => {\n      if (member.data) {\n        member.moves.forEach(move => {\n          if (move.data && !move.checked) {\n            let tempDamage = {};\n            if (move.data.damage_class.name === 'physical' || move.data.damage_class.name === 'special') {\n              const found = typeData.find(value => value.name === move.data.type.name);\n              if (found) {\n                found.damage_relations.double_damage_to.forEach(damagedType => {\n                  // Sets damage value in type chart\n                  tempDamageValues.offensive[damagedType.name].type_chart++;\n                  // Sets damage value of damaged type for each move\n                  tempDamage[damagedType.name] ? tempDamage[damagedType.name]++ : tempDamage[damagedType.name] = 1;\n                });\n              }\n            }\n            move.checked = true;\n            move.damage = tempDamage;\n          }\n        });\n      }\n    });\n    setDamageValues(tempDamageValues);\n  }\n  function resetOffensiveDamage(teamIndex, moveIndex) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    const member = tempTeam[teamIndex];\n    let move = member.moves[moveIndex];\n\n    // Reset type chart damage values\n    for (const damagedType in move.damage) {\n      const damageValue = move.damage[damagedType];\n      if (damageValue < 0) {\n        tempDamageValues.offensive[damagedType].type_chart += Math.abs(damageValue);\n      } else {\n        tempDamageValues.offensive[damagedType].type_chart -= Math.abs(damageValue);\n      }\n    }\n    move.damage = null;\n    move.checked = false;\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function handleTeamChange(member, index) {\n    let temp = [...team];\n    const found = pokemonNames.find(pokemon => pokemon === member);\n    if (found) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${found}`)\n      .then(res => res.json())\n      .then(result => {\n        temp[index].data = result;\n        setTeam(temp);\n        calculateDefensiveDamage(temp);\n      });\n    } else {\n      temp[index].data = null;\n      setTeam(temp);\n      resetDefensiveDamage(index);\n    }\n  }\n  function handleMoveChange(move, teamIndex, moveIndex) {\n   let temp = [...team];\n   let member = temp[teamIndex];\n   const found = moveNames.find(moveName => moveName === move);\n   if (found) {\n     fetch(`https://pokeapi.co/api/v2/move/${found}/`)\n     .then(res => res.json())\n     .then(result => {\n       member.moves[moveIndex].data = result;\n       setTeam(temp);\n       calculateOffensiveDamage(temp);\n     })\n   } else {\n    member.moves[moveIndex].data = null;\n    setTeam(temp);\n    resetOffensiveDamage(teamIndex, moveIndex);\n   }\n  }\n\n  const loadingTemplate = (\n    <div className=\"loading-container\">\n      <p className=\"loading-text\">Loading...</p>\n    </div>\n  );\n\n  if (error) {\n    return <div>Error: {error.message} </div>;\n  } else if (!isLoaded) {\n    return loadingTemplate;\n  } else {\n    return (\n      <div>\n        <h1>Pokémon Team Builder</h1>\n        <ul className=\"team\">\n          {team.map((member, index) => \n            <TeamMember\n              key={index}\n              index={index}\n              data={member.data}\n              pokemonList={pokemonNames}\n              onTeamChange={handleTeamChange}\n              onMoveChange={handleMoveChange} />\n          )}\n        </ul>\n        <TypeChart\n          name=\"Defensive\"\n          types={typeData.map(type => type.name)}\n          damageValues={damageValues.defensive}\n          team={team} />\n        <TypeChart\n          name=\"Offensive\"\n          types={typeData.map(type => type.name)}\n          damageValues={damageValues.offensive}\n          team={team} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}