{"version":3,"sources":["helpers.js","components/TeamMember.js","components/popovers/DefensivePopover.js","components/popovers/OffensivePopover.js","components/TypeChart.js","App.js","reportWebVitals.js","index.js"],"names":["movesWithHyphens","capitalize","str","toUpperCase","slice","capitalizeAll","split","map","word","join","removeHyphens","replace","formatMove","move","formattedMove","includes","replaceAll","formatAllMoves","moves","name","sort","formatAllPokemon","pokemonList","pokemon","formattedPokemon","formatPokemon","removeFormatting","revertedStr","test","words","length","pop","toLowerCase","StyledCard","styled","Card","StyledCardMedia","CardMedia","StyledCardContent","CardContent","StyledCollapse","Collapse","StyledAutocomplete","Autocomplete","StyledButton","Button","TeamMember","props","useState","data","charAt","setName","isShowingMoves","setIsShowingMoves","Array","fill","setMoves","component","image","sprites","other","front_default","alt","className","inputValue","fullWidth","size","options","renderInput","params","TextField","label","onInputChange","e","value","temp","i","onTeamChange","index","types","type","style","color","indexOf","slot","CardActions","variant","disabled","onClick","in","filter","tempMoves","onMoveChange","handleMoveChange","DefensivePopover","Popover","id","sx","pointerEvents","open","isVisible","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","team","every","member","damageValue","damageValues","OffensivePopover","teamIndex","damage","hasOwnProperty","moveIndex","TypeChart","setAnchorEl","handlePopoverClose","chart","typeChartDamageValue","type_chart","onMouseEnter","event","target","handlePopoverOpen","onMouseLeave","aria-owns","Boolean","undefined","aria-haspopup","popover","Paper","TYPES","App","error","setError","isLoaded","setIsLoaded","pokemonNames","setPokemonNames","moveNames","setMoveNames","typeData","setTypeData","from","checked","setTeam","defensiveObj","offensiveObj","forEach","defensive","offensive","setDamageValues","handleTeamChange","found","find","fetch","then","res","json","result","teamValue","tempTeam","tempDamageValues","tempDamage","typeTracker","decremented","incremented","damage_relations","double_damage_from","damagingType","half_damage_from","no_damage_from","count","calculateDefensiveDamage","Math","abs","damagedType","resetDefensiveDamage","moveName","damage_class","double_damage_to","calculateOffensiveDamage","resetOffensiveDamage","useEffect","a","response","pokemon_entries","prevPokemonNames","pokemon_species","results","prevMoveNames","typeURLs","push","url","Promise","all","values","valuesResult","fetchPokemonNames","fetchMoveNames","fetchTypeData","loadingTemplate","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAAMA,EAAmB,CACvB,iBAAiB,cAAe,aAAc,UAAW,WACzD,eAAgB,iBAAkB,gBAAiB,cAAe,cAClE,iBAAkB,SAAU,eAAgB,cAAe,aAG7D,SAASC,EAAWC,GAClB,OAAOA,EAAI,GAAGC,cAAgBD,EAAIE,MAAM,GAE1C,SAASC,EAAcH,GAGrB,OAFcA,EAAII,MAAM,MACOC,KAAI,SAAAC,GAAI,OAAIP,EAAWO,MAC9BC,KAAK,KAE/B,SAASC,EAAcR,GACrB,OAAOA,EAAIS,QAAQ,KAAM,KAE3B,SAASC,EAAWC,GAClB,IAAIC,EAYJ,OAXID,EAAKE,SAAS,MAChBD,EAAgBT,EAAcK,EAAcG,IAExCb,EAAiBe,SAASF,KAE5BC,EAA0B,mBAATD,GAAsC,mBAATA,GAAsC,iBAATA,EAC3EC,EAAcH,QAAQ,IAAK,KAAOG,EAAcE,WAAW,IAAK,OAGlEF,EAAgBb,EAAWY,GAEtBC,EAeT,SAASG,EAAeC,GAEtB,OADuBA,EAAMX,KAAI,SAAAM,GAAI,OAAID,EAAWC,EAAKA,KAAKM,SAAOC,OAGvE,SAASC,EAAiBC,GAExB,OADsBA,EAAYf,KAAI,SAAAgB,GAAO,OAlB/C,SAAuBA,GACrB,IAAIC,EAUJ,OATID,EAAQR,SAAS,MACnBS,EAAmBnB,EAAcK,EAAca,IAE/B,YAAZA,IACFC,EAAmBA,EAAiBb,QAAQ,IAAK,QAGnDa,EAAmBvB,EAAWsB,GAEzBC,EAO0CC,CAAcF,MAGjE,SAASG,EAAiBxB,GACxB,GAAY,KAARA,EACF,OAAOA,EAET,IAAIyB,EACJ,GAAI,UAAUC,KAAK1B,GAAM,CACvB,IAAI2B,EAAQ3B,EAAII,MAAM,WAEU,KAA5BuB,EAAMA,EAAMC,OAAS,IACvBD,EAAME,MAGRJ,EADwBE,EAAMtB,KAAI,SAAAC,GAAI,OAAIA,EAAKwB,iBACjBvB,KAAK,UAEnCkB,EAAczB,EAAI8B,cAEpB,OAAOL,E,uBCpDHM,EAAaC,YAAOC,IAAPD,CAAH,oHAOVE,EAAkBF,YAAOG,IAAPH,CAAH,sFAMfI,EAAoBJ,YAAOK,IAAPL,CAAH,oFAQjBM,EAAiBN,YAAOO,IAAPP,CAAH,4CAIdQ,EAAqBR,YAAOS,IAAPT,CAAH,kDAIlBU,EAAeV,YAAOW,IAAPX,CAAH,iIA+HHY,MAtHf,SAAoBC,GAClB,MAAwBC,mBACtBD,EAAME,KACFF,EAAME,KAAK9B,KAAK+B,OAAO,GAAG/C,cAAgB4C,EAAME,KAAK9B,KAAKf,MAAM,GAChE,IAHN,mBAAOe,EAAP,KAAagC,EAAb,KAKA,EAA4CH,oBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA0BL,mBAASM,MAAM,GAAGC,KAAK,KAAjD,mBAAOrC,EAAP,KAAcsC,EAAd,KAwBA,OACE,6BACE,eAACvB,EAAD,WACGc,EAAME,KACL,cAACb,EAAD,CACEqB,UAAU,MACVC,MAAOX,EAAME,KAAKU,QAAQC,MAAM,oBAAoBC,cACpDC,IAAKf,EAAME,KAAK9B,OAQlB,qBAAK4C,UAAU,0BAAf,eAEF,cAACrB,EAAD,CACEsB,WAAY7C,EACZ8C,WAAS,EACTC,KAAK,QACLC,QAAS9C,EAAiB0B,EAAMzB,aAChC8C,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAM,yBAE/BC,cA/CR,SAAsBC,EAAGC,GACvBvB,EAAQuB,GAGR,IADA,IAAIC,EAAI,YAAOzD,GACN0D,EAAI,EAAGA,EAAI1D,EAAMY,OAAQ8C,IAChCD,EAAKC,GAAK,GAEZpB,EAASmB,GACT5B,EAAM8B,aAAanD,EAAiBgD,GAAQ3B,EAAM+B,UAyC9C,oBAAIf,UAAU,yBAAd,SACGhB,EAAME,KACL,mCACGF,EAAME,KAAK8B,MAAMxE,KAAI,SAACyE,GAAD,OACpB,qBAEEjB,UAAS,2BAAsBiB,EAAKA,KAAK7D,KAAhC,SAFX,UAIG6D,EAAKA,KAAK7D,KACX,sBAAM8D,MAAO,CAAEC,MAAO,WAAtB,SAC+B,IAA5BnC,EAAME,KAAK8B,MAAMjD,QACiB,IAAnCiB,EAAME,KAAK8B,MAAMI,QAAQH,GACrB,IACA,OARDA,EAAKI,WAchB,oCAAQ,OAGZ,cAACC,EAAA,EAAD,UACE,cAACzC,EAAD,CACE0C,QAAQ,YACRC,UAAWxC,EAAME,KACjBuC,QAzDV,WACEnC,GAAmBD,IAqDb,SAKGA,EAAiB,OAAS,YAG/B,cAACZ,EAAD,CAAgBiD,GAAIrC,EAApB,SACE,cAACd,EAAD,UACGpB,EAAMX,KAAI,SAACM,EAAM+D,GAAP,OACT,cAAClC,EAAD,CAEEsB,WAAYnD,EACZoD,WAAS,EACTC,KAAK,QACLC,QACEpB,EAAME,KACFhC,EAAe8B,EAAME,KAAK/B,OAAOwE,QAE/B,SAAC7E,GAAD,OAAWK,EAAMH,SAASF,MAE5B,GAENuD,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAK,gBAAWK,EAAI,EAAf,WAE9BJ,cAAe,SAACC,EAAGC,GAAJ,OAxF7B,SAA0BI,EAAOL,EAAGC,GAClC,IAAIiB,EAAS,YAAOzE,GACpByE,EAAUb,GAASJ,EACnBlB,EAASmC,GACT5C,EAAM6C,aAAalE,EAAiBgD,GAAQ3B,EAAM+B,MAAOA,GAoFhBe,CAAiBjB,EAAGH,EAAGC,KAf/CE,gB,kBCnFNkB,MA5Df,SAA0B/C,GAaxB,OACE,cAACgD,EAAA,EAAD,CACEC,GAAG,qBACHC,GAAI,CACFC,cAAe,QAEjBC,KAAMpD,EAAMqD,UACZC,SAAUtD,EAAMsD,SAChBC,QAASvD,EAAMuD,QACfC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAEdE,qBAAmB,EAhBrB,SAkBG5D,EAAM6D,KAAKC,OAAM,SAACC,GAAD,OAAaA,EAAO7D,QACpC,4DAEA,qCACE,oBAAIc,UAAS,0BAAqBhB,EAAM5B,KAA3B,SAAb,SACGlB,EAAW8C,EAAM5B,QAEpB,oBAAI4C,UAAU,eAAd,SACGhB,EAAM6D,KAAKrG,KAAI,SAACuG,EAAQhC,GACvB,IAxCiBJ,EAwCXqC,EAAchE,EAAMiE,aAAalC,GACvC,OACEgC,EAAO7D,MACL,+BACGhD,EAAW6G,EAAO7D,KAAK9B,MACxB,sBACE4C,WA9CSW,EA8CsBqC,EA5C/CrC,EAAQ,GAAKA,EAAQ,EACjB,gBACAA,EAAQ,EACR,gBACU,IAAVA,EACA,iBACA,IAqCU,qBAEOqC,EAFP,UAFOjC,cCcZmC,MA1Df,SAA0BlE,GACxB,OACE,cAACgD,EAAA,EAAD,CACEC,GAAG,qBACHC,GAAI,CACFC,cAAe,QAEjBC,KAAMpD,EAAMqD,UACZC,SAAUtD,EAAMsD,SAChBC,QAASvD,EAAMuD,QACfC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAEdE,qBAAmB,EAhBrB,SAkBG5D,EAAM6D,KAAKC,OAAM,SAACC,GAAD,OAAaA,EAAO7D,QACpC,4DAEA,qCACE,qBAAIc,UAAU,kBAAd,qCAEE,sBAAMA,UAAS,UAAKhB,EAAM5B,KAAX,SAAf,SACGlB,EAAW8C,EAAM5B,WAGtB,6BACG4B,EAAM6D,KAAKrG,KAAI,SAACuG,EAAQI,GACvB,OACEJ,EAAO7D,MACP6D,EAAO5F,MACJwE,QACC,SAAC7E,GAAD,OACEA,EAAKoC,MACLpC,EAAKsG,QACLtG,EAAKsG,OAAOC,eAAerE,EAAM5B,SAEpCZ,KAAI,SAACM,EAAMwG,GAAP,OACH,+BACE,sBAAMtD,UAAS,UAAKlD,EAAKoC,KAAK+B,KAAK7D,KAApB,cAAf,SACGP,EAAWC,EAAKoC,KAAK9B,QAF1B,aAISlB,EAAW6G,EAAO7D,KAAK9B,SAJhC,iBAAmB+F,EAAnB,iBAAqCG,kBC0C1CC,MAnFf,SAAmBvE,GACjB,MAAgCC,mBAASM,MAAM,IAAIC,MAAK,IAAxD,mBAAO8C,EAAP,KAAiBkB,EAAjB,KAQMC,EAAqB,SAAC1C,GAC1B,IAAIH,EAAI,YAAO0B,GACf1B,EAAKG,GAAS,KACdyC,EAAY5C,IAGR8C,EAAQ1E,EAAMgC,MAAMxE,KAAI,SAACyE,EAAMF,GACnC,IAAM4C,EAAuB3E,EAAMiE,aAAahC,GAAM2C,WACtD,OACE,qBAAe5D,UAAU,OAAzB,UACE,qBACE6D,aAAc,SAACnD,GAAD,OAjBI,SAACK,EAAO+C,GAChC,IAAIlD,EAAI,YAAO0B,GACf1B,EAAKG,GAAS+C,EAAMC,OACpBP,EAAY5C,GAceoD,CAAkBjD,EAAOL,IAC9CuD,aAAc,kBAAMR,EAAmB1C,IACvCf,UAAS,qBAAgBiB,EAAhB,OACTiD,YACEC,QAAQ7B,EAASvB,IAAU,0BAAuBqD,EAEpDC,gBAAc,OAPhB,SASGpD,IAEa,cAAfjC,EAAM5B,KACL,cAAC,EAAD,CACEA,KAAM6D,EACNF,MAAOA,EACPsB,UAAW8B,QAAQ7B,EAASvB,IAC5B8B,KAAM7D,EAAM6D,KACZI,aAAcjE,EAAMiE,aAAahC,GAAMqD,QACvChC,SAAUA,EAASvB,GACnBwB,QAAS,kBAAMkB,EAAmB1C,MAGpC,cAAC,EAAD,CACE3D,KAAM6D,EACNF,MAAOA,EACPsB,UAAW8B,QAAQ7B,EAASvB,IAC5B8B,KAAM7D,EAAM6D,KACZP,SAAUA,EAASvB,GACnBwB,QAAS,kBAAMkB,EAAmB1C,MAGtC,mBACEf,UACE,gBACC2D,EAAuB,EACpB,YACAA,EAAuB,EACvB,YACA,IAPR,SAUGA,EAAuB,EAAvB,WACOA,GACJA,MA5CC1C,MAkDb,OACE,eAACsD,EAAA,EAAD,CACEvE,UACE,wBACgB,cAAfhB,EAAM5B,KACH,wBACA,yBALR,UAQE,oBAAI4C,UAAU,qBAAd,mBAAuChB,EAAM5B,KAA7C,eACA,oBAAI4C,UAAU,aAAd,SAA4B0D,QC/E5Bc,EAAQ,CACZ,SAAU,WAAY,SAAU,SAAU,SAAU,OACpD,MAAO,QAAS,QAAS,OAAQ,QAAS,QAC1C,WAAY,UAAW,MAAO,SAAU,OAAQ,SAySnCC,MAtSf,WACE,MAA0BxF,mBAAS,MAAnC,mBAAOyF,EAAP,KAAcC,EAAd,KACA,EAAgC1F,oBAAS,GAAzC,mBAAO2F,EAAP,KAAiBC,EAAjB,KACA,EAAwC5F,mBAAS,IAAjD,mBAAO6F,EAAP,KAAqBC,EAArB,KACA,EAAkC9F,mBAAS,IAA3C,mBAAO+F,EAAP,KAAkBC,EAAlB,KACA,EAAgChG,mBAAS,IAAzC,mBAAOiG,EAAP,KAAiBC,EAAjB,KACA,EAAwBlG,mBAASM,MAAM6F,KAAK,CAACrH,OAAQ,IAAI,iBACvD,CACEmB,KAAM,KACN/B,MAAOoC,MAAM6F,KAAK,CAACrH,OAAQ,IAAI,iBAAO,CAACmB,KAAM,KAAMkE,OAAQ,KAAMiC,SAAS,MAC1EjC,OAAQ,KACRiC,SAAS,OALb,mBAAOxC,EAAP,KAAayC,EAAb,KAQA,EAAwCrG,oBAAS,WAC/C,IAAIsG,EAAe,GACfC,EAAe,GASnB,OARAhB,EAAMiB,SAAQ,SAAAxE,GACZsE,EAAatE,GAAQ,CAAC2C,WAAY,EAAGU,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAC9DkB,EAAavE,GAAQ,CAAC2C,WAAY,MAEf,CACnB8B,UAAWH,EACXI,UAAWH,MATf,mBAAOvC,EAAP,KAAqB2C,EAArB,KA4MA,SAASC,EAAiB9C,EAAQhC,GAChC,IAAIH,EAAI,YAAOiC,GACTiD,EAAQhB,EAAaiB,MAAK,SAAAvI,GAAO,OAAIA,IAAYuF,KACnD+C,EACFE,MAAM,qCAAD,OAAsCF,IAC1CG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJxF,EAAKG,GAAO7B,KAAOkH,EACnBd,EAAQ1E,GAhKd,SAAkCyF,GAChC,IAAIC,EAAQ,YAAOzD,GACf0D,EAAgB,eAAOtD,GAC3BoD,EAAUZ,SAAQ,SAAC1C,EAAQhC,GACzB,GAAIgC,EAAO7D,OAAS6D,EAAOsC,QAAS,CAClC,IAAImB,EAAa,GACbC,EAAc,GAiDlB,IAAK,IAAMxF,KAhDXuD,EAAMiB,SAAQ,SAAAxE,GACZwF,EAAYxF,GAAQ,CAClByF,aAAa,EACbC,aAAa,MAGjB5D,EAAO7D,KAAK8B,MAAMyE,SAAQ,SAAAxE,GACxB,IAAM6E,EAAQZ,EAASa,MAAK,SAAApF,GAAK,OAAIA,EAAMvD,OAAS6D,EAAKA,KAAK7D,QAC1D0I,IAEFA,EAAMc,iBAAiBC,mBAAmBpB,SAAQ,SAAAqB,GAE3CL,EAAYK,EAAa1J,MAAMsJ,cAElCH,EAAiBb,UAAUoB,EAAa1J,MAAMwG,aAE9C4C,EAAWM,EAAa1J,MAAQoJ,EAAWM,EAAa1J,QAAUoJ,EAAWM,EAAa1J,OAAS,EACnGqJ,EAAYK,EAAa1J,MAAMsJ,aAAc,GAI/CH,EAAiBb,UAAUoB,EAAa1J,MAAMkH,QAAQvD,IAAU,KAGlE+E,EAAMc,iBAAiBG,iBAAiBtB,SAAQ,SAAAqB,GAEzCL,EAAYK,EAAa1J,MAAMuJ,cAClCJ,EAAiBb,UAAUoB,EAAa1J,MAAMwG,aAC9C4C,EAAWM,EAAa1J,MAAQoJ,EAAWM,EAAa1J,QAAUoJ,EAAWM,EAAa1J,MAAQ,EAClGqJ,EAAYK,EAAa1J,MAAMuJ,aAAc,GAG/CJ,EAAiBb,UAAUoB,EAAa1J,MAAMkH,QAAQvD,IAAU,MAGlE+E,EAAMc,iBAAiBI,eAAevB,SAAQ,SAAAqB,GAG5C,IADA,IAAMG,EAASR,EAAYK,EAAa1J,MAAMsJ,YAAe,EAAI,EACxD7F,EAAI,EAAGA,EAAIoG,EAAOpG,IACzB0F,EAAiBb,UAAUoB,EAAa1J,MAAMwG,aAC9C4C,EAAWM,EAAa1J,MAAQoJ,EAAWM,EAAa1J,QAAUoJ,EAAWM,EAAa1J,MAAQ,EAGpGmJ,EAAiBb,UAAUoB,EAAa1J,MAAMkH,QAAQvD,IAAU,SAKnDyF,EACQ,IAArBA,EAAWvF,WACNuF,EAAWvF,GAGtB8B,EAAOsC,SAAU,EACjBtC,EAAOK,OAASoD,MAGpBZ,EAAgBW,GAChBjB,EAAQgB,GAgGJY,CAAyBtG,OAG3BA,EAAKG,GAAO7B,KAAO,KACnBoG,EAAQ1E,GAlGZ,SAA8BG,GAC5B,IAAIuF,EAAQ,YAAOzD,GACf0D,EAAgB,eAAOtD,GACrBF,EAASuD,EAASvF,GAGxB,IAAK,IAAM+F,KAAgB/D,EAAOK,OAAQ,CACxC,IAAMJ,EAAcD,EAAOK,OAAO0D,GAC9B9D,EAAc,EAChBuD,EAAiBb,UAAjB,UAA8BoB,IAAgBlD,YAAcuD,KAAKC,IAAIpE,GAErEuD,EAAiBb,UAAjB,UAA8BoB,IAAgBlD,YAAcuD,KAAKC,IAAIpE,GAIzE,IAAK,IAAM8D,KAAgBP,EAAiBb,UAC1Ca,EAAiBb,UAAUoB,GAAcxC,QAAQvD,GAAS,EAE5DgC,EAAOK,OAAS,KAChBL,EAAOsC,SAAU,EAGjBtC,EAAO5F,MAAMsI,SAAQ,SAAA3I,GAEnB,IAAK,IAAMuK,KAAevK,EAAKsG,OAAQ,CACrC,IAAMJ,EAAclG,EAAKsG,OAAOiE,GAC5BrE,EAAc,EAChBuD,EAAiBZ,UAAU0B,GAAazD,YAAcuD,KAAKC,IAAIpE,GAE/DuD,EAAiBZ,UAAU0B,GAAazD,YAAcuD,KAAKC,IAAIpE,GAGnElG,EAAKoC,KAAO,KACZpC,EAAKsG,OAAS,KACdtG,EAAKuI,SAAU,KAEjBO,EAAgBW,GAChBjB,EAAQgB,GA8DNgB,CAAqBvG,IAGzB,SAASe,EAAiBhF,EAAMqG,EAAWG,GAC1C,IAAI1C,EAAI,YAAOiC,GACXE,EAASnC,EAAKuC,GACZ2C,EAAQd,EAAUe,MAAK,SAAAwB,GAAQ,OAAIA,IAAazK,KAClDgJ,EACFE,MAAM,kCAAD,OAAmCF,EAAnC,MACJG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJrD,EAAO5F,MAAMmG,GAAWpE,KAAOkH,EAC/Bd,EAAQ1E,GAxEb,SAAkCyF,GAChC,IAAIE,EAAgB,eAAOtD,GAC3BoD,EAAUZ,SAAQ,SAAA1C,GACZA,EAAO7D,MACT6D,EAAO5F,MAAMsI,SAAQ,SAAA3I,GACnB,GAAIA,EAAKoC,OAASpC,EAAKuI,QAAS,CAC9B,IAAImB,EAAa,GACjB,GAAoC,aAAhC1J,EAAKoC,KAAKsI,aAAapK,MAAuD,YAAhCN,EAAKoC,KAAKsI,aAAapK,KAAoB,CAC3F,IAAM0I,EAAQZ,EAASa,MAAK,SAAApF,GAAK,OAAIA,EAAMvD,OAASN,EAAKoC,KAAK+B,KAAK7D,QAC/D0I,GACFA,EAAMc,iBAAiBa,iBAAiBhC,SAAQ,SAAA4B,GAE9Cd,EAAiBZ,UAAU0B,EAAYjK,MAAMwG,aAE7C4C,EAAWa,EAAYjK,MAAQoJ,EAAWa,EAAYjK,QAAUoJ,EAAWa,EAAYjK,MAAQ,KAIrGN,EAAKuI,SAAU,EACfvI,EAAKsG,OAASoD,SAKtBZ,EAAgBW,GAiDbmB,CAAyB9G,OAG5BmC,EAAO5F,MAAMmG,GAAWpE,KAAO,KAC/BoG,EAAQ1E,GAnDV,SAA8BuC,EAAWG,GACvC,IAAIgD,EAAQ,YAAOzD,GACf0D,EAAgB,eAAOtD,GAEvBnG,EADWwJ,EAASnD,GACNhG,MAAMmG,GAGxB,IAAK,IAAM+D,KAAevK,EAAKsG,OAAQ,CACrC,IAAMJ,EAAclG,EAAKsG,OAAOiE,GAC5BrE,EAAc,EAChBuD,EAAiBZ,UAAU0B,GAAazD,YAAcuD,KAAKC,IAAIpE,GAE/DuD,EAAiBZ,UAAU0B,GAAazD,YAAcuD,KAAKC,IAAIpE,GAGnElG,EAAKsG,OAAS,KACdtG,EAAKuI,SAAU,EACfO,EAAgBW,GAChBjB,EAAQgB,GAkCRqB,CAAqBxE,EAAWG,IA9NlCsE,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACuB7B,MAAM,wCAD7B,cACM8B,EADN,gBAEqBA,EAAS3B,OAF9B,cAGS4B,gBAAgBtC,SAAQ,SAAAjI,GAAO,OAAIuH,GAAgB,SAAAiD,GAAgB,4BAAQA,GAAR,CAA0BxK,EAAQyK,gBAAgB7K,aAH9H,4CADc,kEAOd,4BAAAyK,EAAA,sEACuB7B,MAAM,4CAD7B,cACM8B,EADN,gBAEqBA,EAAS3B,OAF9B,cAGS+B,QAAQzC,SAAQ,SAAA3I,GAAI,OAAImI,GAAa,SAAAkD,GAAa,4BAAQA,GAAR,CAAuBrL,EAAKM,aAHvF,4CAPc,kEAad,oCAAAyK,EAAA,sEACuB7B,MAAM,kCAD7B,cACM8B,EADN,gBAEqBA,EAAS3B,OAF9B,cAEMC,EAFN,OAIMgC,EAAW,GAEfhC,EAAO8B,QAAQvG,QAAO,SAAAV,GAAI,MAAkB,YAAdA,EAAK7D,MAAoC,WAAd6D,EAAK7D,QAC7DqI,SAAQ,SAAAxE,GAAI,OAAImH,EAASC,KAAKpH,EAAKqH,QAPtC,UASqBC,QAAQC,IAAIJ,EAAS5L,KAAI,SAAA8L,GAAG,OAAItC,MAAMsC,OAT3D,eASMG,EATN,iBAU2BF,QAAQC,IAAIC,EAAOjM,KAAI,SAAAmE,GAAK,OAAIA,EAAMwF,WAVjE,QAUMuC,EAVN,OAWEvD,EAAYuD,GAXd,6CAbc,sBA2BdH,QAAQC,IAAI,CA3BG,WAAD,+BA2BDG,GA3BC,0CA2BoBC,GA3BpB,0CA2BsCC,KACnD5C,MAAK,WACJpB,GAAY,MAEd,SAAAH,GACEG,GAAY,GACZF,EAASD,QAIV,IA6LH,IAAMoE,EACJ,qBAAK9I,UAAU,oBAAf,SACE,mBAAGA,UAAU,eAAb,0BAIJ,OAAI0E,EACK,0CAAaA,EAAMqE,QAAnB,OACGnE,EAIR,gCACE,yDACA,oBAAI5E,UAAU,OAAd,SACG6C,EAAKrG,KAAI,SAACuG,EAAQhC,GAAT,OACR,cAAC,EAAD,CAEEA,MAAOA,EACP7B,KAAM6D,EAAO7D,KACb3B,YAAauH,EACbhE,aAAc+E,EACdhE,aAAcC,GALTf,QAQX,cAAC,EAAD,CACE3D,KAAK,YACL4D,MAAOkE,EAAS1I,KAAI,SAAAyE,GAAI,OAAIA,EAAK7D,QACjC6F,aAAcA,EAAayC,UAC3B7C,KAAMA,IACR,cAAC,EAAD,CACEzF,KAAK,YACL4D,MAAOkE,EAAS1I,KAAI,SAAAyE,GAAI,OAAIA,EAAK7D,QACjC6F,aAAcA,EAAa0C,UAC3B9C,KAAMA,OAzBLiG,GCtQIE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.090b2cb8.chunk.js","sourcesContent":["const movesWithHyphens = [\n  'baby-doll-eyes','double-edge', 'freeze-dry', 'lock-on', 'mud-slap',\n  'multi-attack', 'power-up-punch', 'self-destruct', 'soft-boiled', 'topsy-turvy',\n  'trick-or-treat', 'u-turn', 'wake-up-slap', 'will-o-wisp', 'x-scissor'\n];\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nfunction capitalizeAll(str) {\n  const words = str.split(/\\s/);\n  const capitalizedWords = words.map(word => capitalize(word));\n  return capitalizedWords.join(' ');\n}\nfunction removeHyphens(str) {\n  return str.replace(/-/g, ' ');\n}\nfunction formatMove(move) {\n  let formattedMove;\n  if (move.includes('-')) {\n    formattedMove = capitalizeAll(removeHyphens(move));\n    // If move name is supposed to include hyphens\n    if (movesWithHyphens.includes(move)) {\n      // These move names only have one hyphen\n      formattedMove = (move === 'baby-doll-eyes' || move === 'power-up-punch' || move === 'wake-up-slap') ?\n      formattedMove.replace(' ', '-') : formattedMove.replaceAll(' ', '-');\n    }\n  } else {\n    formattedMove = capitalize(move);\n  }\n  return formattedMove;\n}\nfunction formatPokemon(pokemon) {\n  let formattedPokemon;\n  if (pokemon.includes('-')) {\n    formattedPokemon = capitalizeAll(removeHyphens(pokemon));\n    // Handles Pokémon names with special requirements\n    if (pokemon === 'mr-mime') {\n      formattedPokemon = formattedPokemon.replace(' ', '. ');\n    }\n  } else {\n    formattedPokemon = capitalize(pokemon);\n  }\n  return formattedPokemon;\n}\nfunction formatAllMoves(moves) {\n  const formattedMoves = moves.map(move => formatMove(move.move.name)).sort();\n  return formattedMoves;\n}\nfunction formatAllPokemon(pokemonList) {\n  const formattedList = pokemonList.map(pokemon => formatPokemon(pokemon));\n  return formattedList;\n}\nfunction removeFormatting(str) {\n  if (str === '') {\n    return str;\n  }\n  let revertedStr;\n  if (/[\\s.-]+/.test(str)) {\n    let words = str.split(/[\\s.-]+/);\n    // Remove empty string elements\n    if (words[words.length - 1] === '') {\n      words.pop();\n    }\n    const lowercasedWords = words.map(word => word.toLowerCase());\n    revertedStr = lowercasedWords.join('-');\n  } else {\n    revertedStr = str.toLowerCase();\n  }\n  return revertedStr;\n}\n\nexport { capitalize, formatMove, formatPokemon, formatAllMoves, formatAllPokemon, removeFormatting };","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Collapse,\n  Autocomplete,\n  TextField,\n} from '@mui/material';\n\nimport { formatAllMoves, formatAllPokemon, removeFormatting } from '../helpers';\n\n/* STYLED COMPONENTS */\n\nconst StyledCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.5em;\n`;\n\nconst StyledCardMedia = styled(CardMedia)`\n  width: 125px;\n  height: 125px;\n  border-radius: 50%;\n`;\n\nconst StyledCardContent = styled(CardContent)`\n  padding: 0;\n\n  :last-child {\n    padding: 0;\n  }\n`;\n\nconst StyledCollapse = styled(Collapse)`\n  width: 100%;\n`;\n\nconst StyledAutocomplete = styled(Autocomplete)`\n  margin-top: 0.5em;\n`;\n\nconst StyledButton = styled(Button)`\n  background-color: #464646;\n  font-size: 12px;\n\n  :hover {\n    background-color: #585858;\n  }\n`;\n\nfunction TeamMember(props) {\n  const [name, setName] = useState(\n    props.data\n      ? props.data.name.charAt(0).toUpperCase() + props.data.name.slice(1)\n      : ''\n  );\n  const [isShowingMoves, setIsShowingMoves] = useState(false);\n  const [moves, setMoves] = useState(Array(4).fill(''));\n\n  function handleChange(e, value) {\n    setName(value);\n    // Resets moves\n    let temp = [...moves];\n    for (let i = 0; i < moves.length; i++) {\n      temp[i] = '';\n    }\n    setMoves(temp);\n    props.onTeamChange(removeFormatting(value), props.index);\n  }\n\n  function handleMoveChange(index, e, value) {\n    let tempMoves = [...moves];\n    tempMoves[index] = value;\n    setMoves(tempMoves);\n    props.onMoveChange(removeFormatting(value), props.index, index);\n  }\n\n  function handleClick() {\n    setIsShowingMoves(!isShowingMoves);\n  }\n\n  return (\n    <li>\n      <StyledCard>\n        {props.data ? (\n          <StyledCardMedia\n            component=\"img\"\n            image={props.data.sprites.other['official-artwork'].front_default}\n            alt={props.data.name}\n          />\n        ) : (\n          // <img\n          //   src={props.data.sprites.other['official-artwork'].front_default}\n          //   alt={props.data.name}\n          //   className={`team-member-img ${props.data.types[0].type.name}-bg`}\n          // />\n          <div className=\"team-member-placeholder\">?</div>\n        )}\n        <StyledAutocomplete\n          inputValue={name}\n          fullWidth\n          size=\"small\"\n          options={formatAllPokemon(props.pokemonList)}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Pokémon name...\" />\n          )}\n          onInputChange={handleChange}\n        />\n        <ul className=\"team-member-types-list\">\n          {props.data ? (\n            <>\n              {props.data.types.map((type) => (\n                <li\n                  key={type.slot}\n                  className={`team-member-type ${type.type.name}-text`}\n                >\n                  {type.type.name}\n                  <span style={{ color: '#464646' }}>\n                    {props.data.types.length === 2 &&\n                    props.data.types.indexOf(type) === 0\n                      ? '/'\n                      : ''}\n                  </span>\n                </li>\n              ))}\n            </>\n          ) : (\n            <li key=\"0\">???</li>\n          )}\n        </ul>\n        <CardActions>\n          <StyledButton\n            variant=\"contained\"\n            disabled={!props.data}\n            onClick={handleClick}\n          >\n            {isShowingMoves ? 'Hide' : 'Moves'}\n          </StyledButton>\n        </CardActions>\n        <StyledCollapse in={isShowingMoves}>\n          <StyledCardContent>\n            {moves.map((move, i) => (\n              <StyledAutocomplete\n                key={i}\n                inputValue={move}\n                fullWidth\n                size=\"small\"\n                options={\n                  props.data\n                    ? formatAllMoves(props.data.moves).filter(\n                        // removes moves already selected\n                        (move) => !moves.includes(move)\n                      )\n                    : []\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label={`Move #${i + 1}...`} />\n                )}\n                onInputChange={(e, value) => handleMoveChange(i, e, value)}\n              />\n            ))}\n          </StyledCardContent>\n        </StyledCollapse>\n      </StyledCard>\n    </li>\n  );\n}\n\nexport default TeamMember;\n","import React from 'react';\nimport { Popover } from '@mui/material';\n\nimport { capitalize } from '../../helpers';\n\nfunction DefensivePopover(props) {\n  function setDamageValueClass(value) {\n    const valueClass =\n      value > 0 && value < 1\n        ? 'positive bold'\n        : value > 1\n        ? 'negative bold'\n        : value === 0\n        ? 'no-damage bold'\n        : '';\n    return valueClass;\n  }\n\n  return (\n    <Popover\n      id=\"mouse-over-popover\"\n      sx={{\n        pointerEvents: 'none',\n      }}\n      open={props.isVisible}\n      anchorEl={props.anchorEl}\n      onClose={props.onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n      disableRestoreFocus\n    >\n      {props.team.every((member) => !member.data) ? (\n        <p>Please select a Pokémon.</p>\n      ) : (\n        <>\n          <h3 className={`popover-heading ${props.name}-text`}>\n            {capitalize(props.name)}\n          </h3>\n          <ul className=\"popover-team\">\n            {props.team.map((member, index) => {\n              const damageValue = props.damageValues[index];\n              return (\n                member.data && (\n                  <li key={index}>\n                    {capitalize(member.data.name)}\n                    <span\n                      className={setDamageValueClass(damageValue)}\n                    >{` (${damageValue}x)`}</span>\n                  </li>\n                )\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </Popover>\n  );\n}\n\nexport default DefensivePopover;\n","import React from 'react';\nimport { Popover } from '@mui/material';\n\nimport { capitalize, formatMove } from '../../helpers';\n\nfunction OffensivePopover(props) {\n  return (\n    <Popover\n      id=\"mouse-over-popover\"\n      sx={{\n        pointerEvents: 'none',\n      }}\n      open={props.isVisible}\n      anchorEl={props.anchorEl}\n      onClose={props.onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n      disableRestoreFocus\n    >\n      {props.team.every((member) => !member.data) ? (\n        <p>Please select a Pokémon.</p>\n      ) : (\n        <>\n          <h3 className=\"popover-heading\">\n            {`Super effective against `}\n            <span className={`${props.name}-text`}>\n              {capitalize(props.name)}\n            </span>\n          </h3>\n          <ul>\n            {props.team.map((member, teamIndex) => {\n              return (\n                member.data &&\n                member.moves\n                  .filter(\n                    (move) =>\n                      move.data &&\n                      move.damage &&\n                      move.damage.hasOwnProperty(props.name)\n                  )\n                  .map((move, moveIndex) => (\n                    <li key={`member-${teamIndex}-move-${moveIndex}`}>\n                      <span className={`${move.data.type.name}-text bold`}>\n                        {formatMove(move.data.name)}\n                      </span>\n                      {` - ${capitalize(member.data.name)}`}\n                    </li>\n                  ))\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </Popover>\n  );\n}\n\nexport default OffensivePopover;\n","import React, { useState } from 'react';\nimport { Paper } from '@mui/material';\n\nimport DefensivePopover from './popovers/DefensivePopover';\nimport OffensivePopover from './popovers/OffensivePopover';\n\nfunction TypeChart(props) {\n  const [anchorEl, setAnchorEl] = useState(Array(18).fill(false));\n\n  const handlePopoverOpen = (index, event) => {\n    let temp = [...anchorEl];\n    temp[index] = event.target;\n    setAnchorEl(temp);\n  };\n\n  const handlePopoverClose = (index) => {\n    let temp = [...anchorEl];\n    temp[index] = null;\n    setAnchorEl(temp);\n  };\n\n  const chart = props.types.map((type, index) => {\n    const typeChartDamageValue = props.damageValues[type].type_chart;\n    return (\n      <li key={type} className=\"type\">\n        <div\n          onMouseEnter={(e) => handlePopoverOpen(index, e)}\n          onMouseLeave={() => handlePopoverClose(index)}\n          className={`type-label ${type}-bg`}\n          aria-owns={\n            Boolean(anchorEl[index]) ? 'mouse-over-popover' : undefined\n          }\n          aria-haspopup=\"true\"\n        >\n          {type}\n        </div>\n        {props.name === 'Defensive' ? (\n          <DefensivePopover\n            name={type}\n            index={index}\n            isVisible={Boolean(anchorEl[index])}\n            team={props.team}\n            damageValues={props.damageValues[type].popover}\n            anchorEl={anchorEl[index]}\n            onClose={() => handlePopoverClose(index)}\n          />\n        ) : (\n          <OffensivePopover\n            name={type}\n            index={index}\n            isVisible={Boolean(anchorEl[index])}\n            team={props.team}\n            anchorEl={anchorEl[index]}\n            onClose={() => handlePopoverClose(index)}\n          />\n        )}\n        <p\n          className={\n            'damage-value' +\n            (typeChartDamageValue > 0\n              ? ' positive'\n              : typeChartDamageValue < 0\n              ? ' negative'\n              : '')\n          }\n        >\n          {typeChartDamageValue > 0\n            ? `+${typeChartDamageValue}`\n            : typeChartDamageValue}\n        </p>\n      </li>\n    );\n  });\n\n  return (\n    <Paper\n      className={\n        'type-chart-container' +\n        (props.name === 'Defensive'\n          ? ' defensive-type-chart'\n          : ' offensive-type-chart')\n      }\n    >\n      <h2 className=\"type-chart-heading\">{`${props.name} Coverage`}</h2>\n      <ul className=\"type-chart\">{chart}</ul>\n    </Paper>\n  );\n}\n\nexport default TypeChart;\n","import React, { useEffect, useState } from 'react';\nimport TeamMember from './components/TeamMember';\nimport TypeChart from './components/TypeChart';\n// import {v4 as uuidv4 } from 'uuid';\n\nconst TYPES = [\n  'normal', 'fighting', 'flying', 'poison', 'ground', 'rock',\n  'bug', 'ghost', 'steel', 'fire', 'water', 'grass',\n  'electric', 'psychic', 'ice', 'dragon', 'dark', 'fairy'\n];\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [pokemonNames, setPokemonNames] = useState([]);\n  const [moveNames, setMoveNames] = useState([]);\n  const [typeData, setTypeData] = useState([]);\n  const [team, setTeam] = useState(Array.from({length: 6}, () => (\n    {\n      data: null,\n      moves: Array.from({length: 4}, () => ({data: null, damage: null, checked: false})),\n      damage: null,\n      checked: false\n    }\n  )));\n  const [damageValues, setDamageValues] = useState(() => {\n    let defensiveObj = {};\n    let offensiveObj = {};\n    TYPES.forEach(type => {\n      defensiveObj[type] = {type_chart: 0, popover: [1, 1, 1, 1, 1, 1]};\n      offensiveObj[type] = {type_chart: 0};\n    });\n    const initialState = {\n      defensive: defensiveObj,\n      offensive: offensiveObj\n    }\n    return initialState;\n  });\n\n  useEffect(() => {\n    async function fetchPokemonNames() {\n      let response = await fetch('https://pokeapi.co/api/v2/pokedex/2/');\n      let result = await response.json();\n      result.pokemon_entries.forEach(pokemon => setPokemonNames(prevPokemonNames => [...prevPokemonNames, pokemon.pokemon_species.name]));\n    }\n\n    async function fetchMoveNames() {\n      let response = await fetch('https://pokeapi.co/api/v2/move?limit=844');\n      let result = await response.json();\n      result.results.forEach(move => setMoveNames(prevMoveNames => [...prevMoveNames, move.name]));\n    }\n\n    async function fetchTypeData() {\n      let response = await fetch('https://pokeapi.co/api/v2/type');\n      let result = await response.json();\n\n      let typeURLs = [];\n      // Removes unknown and shadow types because they aren't considered part of the 18 types\n      result.results.filter(type => type.name !== 'unknown' && type.name !== 'shadow')\n      .forEach(type => typeURLs.push(type.url));\n\n      let values = await Promise.all(typeURLs.map(url => fetch(url)));\n      let valuesResult = await Promise.all(values.map(value => value.json()));\n      setTypeData(valuesResult);\n    }\n\n    Promise.all([fetchPokemonNames(), fetchMoveNames(), fetchTypeData()])\n    .then(() => {\n      setIsLoaded(true);\n    },\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    }\n    );\n\n  }, []);\n  function calculateDefensiveDamage(teamValue) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    teamValue.forEach((member, index) => {\n      if (member.data && !member.checked) {\n        let tempDamage = {};\n        let typeTracker = {};\n        TYPES.forEach(type => {\n          typeTracker[type] = {\n            decremented: false,\n            incremented: false\n          };\n        });\n        member.data.types.forEach(type => {\n          const found = typeData.find(value => value.name === type.type.name);\n          if (found) {\n            // Double damage\n            found.damage_relations.double_damage_from.forEach(damagingType => {\n              // Ensures damage value isn't duplicated for quad weak types\n              if (!typeTracker[damagingType.name].decremented) {\n                // Sets damage value in type chart\n                tempDamageValues.defensive[damagingType.name].type_chart--;\n                // Sets damage value of damaging type for each member\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]-- : tempDamage[damagingType.name] = -1;\n                typeTracker[damagingType.name].decremented = true;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} is weak to ${damagingType.name}`);\n              // Sets damage value in popover\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 2\n            });\n            // Half damage\n            found.damage_relations.half_damage_from.forEach(damagingType => {\n              // Ensures damage value isn't duplicated for quad resistant types\n              if (!typeTracker[damagingType.name].incremented) {\n                tempDamageValues.defensive[damagingType.name].type_chart++;\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]++ : tempDamage[damagingType.name] = 1;\n                typeTracker[damagingType.name].incremented = true;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} resists ${damagingType.name}`);\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 0.5;\n            });\n            // No damage\n            found.damage_relations.no_damage_from.forEach(damagingType => {\n              // Adds back decremented damage value because unaffected types take precedence\n              const count = (typeTracker[damagingType.name].decremented) ? 2 : 1;\n              for (let i = 0; i < count; i++) {\n                tempDamageValues.defensive[damagingType.name].type_chart++;\n                tempDamage[damagingType.name] ? tempDamage[damagingType.name]++ : tempDamage[damagingType.name] = 1;\n              }\n              // console.log(`The ${type.type.name}-type ${member.name} is unaffected by ${damagingType.name}`);\n              tempDamageValues.defensive[damagingType.name].popover[index] *= 0;\n            });\n          }\n        });\n        // Removes types with damage values of 0 since they're unnecessary\n        for (const type in tempDamage) {\n          if (tempDamage[type] === 0) {\n            delete tempDamage[type];\n          }\n        };\n        member.checked = true;\n        member.damage = tempDamage;\n      }\n    });\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function resetDefensiveDamage(index) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    const member = tempTeam[index];\n\n    // Reset type chart damage values\n    for (const damagingType in member.damage) {\n      const damageValue = member.damage[damagingType];\n      if (damageValue < 0) {\n        tempDamageValues.defensive[`${damagingType}`].type_chart += Math.abs(damageValue);\n      } else {\n        tempDamageValues.defensive[`${damagingType}`].type_chart -= Math.abs(damageValue);\n      }\n    }\n    // Reset popover damage values\n    for (const damagingType in tempDamageValues.defensive) {\n      tempDamageValues.defensive[damagingType].popover[index] = 1;\n    }\n    member.damage = null;\n    member.checked = false;\n  \n    // Reset moves\n    member.moves.forEach(move => {\n      // Reset type chart damage values\n      for (const damagedType in move.damage) {\n        const damageValue = move.damage[damagedType];\n        if (damageValue < 0) {\n          tempDamageValues.offensive[damagedType].type_chart += Math.abs(damageValue);\n        } else {\n          tempDamageValues.offensive[damagedType].type_chart -= Math.abs(damageValue);\n        }\n      }\n      move.data = null;\n      move.damage = null;\n      move.checked = false;\n    })\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function calculateOffensiveDamage(teamValue) {\n    let tempDamageValues = {...damageValues};\n    teamValue.forEach(member => {\n      if (member.data) {\n        member.moves.forEach(move => {\n          if (move.data && !move.checked) {\n            let tempDamage = {};\n            if (move.data.damage_class.name === 'physical' || move.data.damage_class.name === 'special') {\n              const found = typeData.find(value => value.name === move.data.type.name);\n              if (found) {\n                found.damage_relations.double_damage_to.forEach(damagedType => {\n                  // Sets damage value in type chart\n                  tempDamageValues.offensive[damagedType.name].type_chart++;\n                  // Sets damage value of damaged type for each move\n                  tempDamage[damagedType.name] ? tempDamage[damagedType.name]++ : tempDamage[damagedType.name] = 1;\n                });\n              }\n            }\n            move.checked = true;\n            move.damage = tempDamage;\n          }\n        });\n      }\n    });\n    setDamageValues(tempDamageValues);\n  }\n  function resetOffensiveDamage(teamIndex, moveIndex) {\n    let tempTeam = [...team];\n    let tempDamageValues = {...damageValues};\n    const member = tempTeam[teamIndex];\n    let move = member.moves[moveIndex];\n\n    // Reset type chart damage values\n    for (const damagedType in move.damage) {\n      const damageValue = move.damage[damagedType];\n      if (damageValue < 0) {\n        tempDamageValues.offensive[damagedType].type_chart += Math.abs(damageValue);\n      } else {\n        tempDamageValues.offensive[damagedType].type_chart -= Math.abs(damageValue);\n      }\n    }\n    move.damage = null;\n    move.checked = false;\n    setDamageValues(tempDamageValues);\n    setTeam(tempTeam);\n  }\n  function handleTeamChange(member, index) {\n    let temp = [...team];\n    const found = pokemonNames.find(pokemon => pokemon === member);\n    if (found) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${found}`)\n      .then(res => res.json())\n      .then(result => {\n        temp[index].data = result;\n        setTeam(temp);\n        calculateDefensiveDamage(temp);\n      });\n    } else {\n      temp[index].data = null;\n      setTeam(temp);\n      resetDefensiveDamage(index);\n    }\n  }\n  function handleMoveChange(move, teamIndex, moveIndex) {\n   let temp = [...team];\n   let member = temp[teamIndex];\n   const found = moveNames.find(moveName => moveName === move);\n   if (found) {\n     fetch(`https://pokeapi.co/api/v2/move/${found}/`)\n     .then(res => res.json())\n     .then(result => {\n       member.moves[moveIndex].data = result;\n       setTeam(temp);\n       calculateOffensiveDamage(temp);\n     })\n   } else {\n    member.moves[moveIndex].data = null;\n    setTeam(temp);\n    resetOffensiveDamage(teamIndex, moveIndex);\n   }\n  }\n\n  const loadingTemplate = (\n    <div className=\"loading-container\">\n      <p className=\"loading-text\">Loading...</p>\n    </div>\n  );\n\n  if (error) {\n    return <div>Error: {error.message} </div>;\n  } else if (!isLoaded) {\n    return loadingTemplate;\n  } else {\n    return (\n      <div>\n        <h1>Pokémon Team Builder</h1>\n        <ul className=\"team\">\n          {team.map((member, index) => \n            <TeamMember\n              key={index}\n              index={index}\n              data={member.data}\n              pokemonList={pokemonNames}\n              onTeamChange={handleTeamChange}\n              onMoveChange={handleMoveChange} />\n          )}\n        </ul>\n        <TypeChart\n          name=\"Defensive\"\n          types={typeData.map(type => type.name)}\n          damageValues={damageValues.defensive}\n          team={team} />\n        <TypeChart\n          name=\"Offensive\"\n          types={typeData.map(type => type.name)}\n          damageValues={damageValues.offensive}\n          team={team} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}